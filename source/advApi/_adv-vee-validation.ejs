---
title: 製作包含 v-model 的元件
layout: ./source/_layout.ejs
current: adv-vee-validation
menu: advApi
engine: ejs
---

<div id="app">
  <h2>套用一個現成的流程</h2>
  <p>參考文件：<a href="https://hackmd.io/FFv0a5cBToOATP7uI5COMQ">https://hackmd.io/FFv0a5cBToOATP7uI5COMQ</a></p>

  <h3>範例：載入 VeeValidate 驗證套件</h3>
  <v-form v-slot="{ errors, values, handleSubmit, validate }" @submit="onSubmit" >
    {{ errors }} {{ values }}

    <div class="mb-3">
      <label for="email" class="form-label">Email</label>
      <v-field id="email" name="email" type="email" class="form-control" :class="{ 'is-invalid': errors['email'] }"
               placeholder="請輸入 Email" rules="email|required" v-model="user.email"></v-field>
      <error-message name="email" class="invalid-feedback"></error-message>
    </div>

    <div class="mb-3">
      <label for="name" class="form-label">姓名</label>
      <v-field id="name" name="姓名" type="text" class="form-control" :class="{ 'is-invalid': errors['姓名'] }"
               placeholder="請輸入姓名" rules="required" v-model="user.name"></v-field>
      <error-message name="姓名" class="invalid-feedback"></error-message>
    </div>

    <div class="mb-3">
      <label for="address" class="form-label">電話</label>
      <v-field id="address" name="電話" type="text" class="form-control" :class="{ 'is-invalid': errors['電話'] }"
               placeholder="請輸入電話" :rules="isPhone" v-model="user.phone"></v-field>
      <error-message name="電話" class="invalid-feedback"></error-message>
    </div>

    <div class="mb-3">
      <label for="name" class="form-label">地區</label>
      <v-field id="name" name="地區" class="form-control" :class="{ 'is-invalid': errors['地區'] }"
               placeholder="請輸入地區" rules="required" v-model="user.region" as="select">
        <option value="">請選擇地區</option>
        <option value="台北市">台北市</option>
        <option value="高雄市">高雄市</option>
      </v-field>
      <error-message name="地區" class="invalid-feedback"></error-message>
    </div>

    <div class="mb-3">
      <label for="address" class="form-label">地址</label>
      <v-field id="address" name="地址" type="text" class="form-control" :class="{ 'is-invalid': errors['地址'] }"
               placeholder="請輸入地址" rules="required" v-model="user.phone"></v-field>
      <error-message name="地址" class="invalid-feedback"></error-message>
    </div>

    <button class="btn me-2 btn-outline-primary" type="button" @click="validate">驗證</button>
    <button class="btn btn-primary" type="submit">Submit</button>
  </v-form>

</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/vee-validate/4.1.17/vee-validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@vee-validate/i18n@4.1.17/dist/vee-validate-i18n.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@vee-validate/rules@4.1.17/dist/vee-validate-rules.min.js"></script>
<script type="module">

// 文件：https://vee-validate.logaretm.com/v4/guide/global-validators#vee-validaterules
// Object.keys(VeeValidateRules).forEach(rule => {
//   VeeValidate.defineRule(rule, VeeValidateRules[rule]);
// });
VeeValidate.defineRule('email', VeeValidateRules['email']);
VeeValidate.defineRule('required', VeeValidateRules['required']);

// 資源來源：https://github.com/logaretm/vee-validate/blob/vee-validate%404.1.16/packages/i18n/src/locale/zh_TW.json
VeeValidateI18n.loadLocaleFromURL('./zh_TW.json');

// Activate the locale
VeeValidate.configure({
  generateMessage: VeeValidateI18n.localize('zh_TW'),
  validateOnInput: true
});



const app = Vue.createApp({
  data() {
    return {
      user: {
        email: '',
        name: '',
        address: '',
        phone: ''
      }
    }
  },
  methods: {
    onSubmit() {
      console.log(this.user);
    },
    isPhone(value) {
      const phoneNumber = /^(09)[0-9]{8}$/
      return phoneNumber.test(value) ? true : '需要正確的電話號碼'
    }
  },
  created() {
    console.log(this);
  }
});

app.component('VForm', VeeValidate.Form);
app.component('VField', VeeValidate.Field);
app.component('ErrorMessage', VeeValidate.ErrorMessage);

app.mount('#app');
</script>
