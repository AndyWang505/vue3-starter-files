---
title: Methods
layout: ./source/_layout.ejs
current: options-methods
menu: optionsApi
engine: ejs
---

<div id="app">

  <h3>methods 的結構</h3>
  <ul>
    <li>由 methods 定義的物件</li>
    <li>內層均是函式</li>
  </ul>

  <h3>methods 的觸發方法（點擊、其它 options api、生命週期...）</h3>
  <button type="button" @click="trigger('Click Methods')">點擊觸發</button>

  <button type="button" @click="callOtherMethod">呼叫另一個 methods</button>

  <h3>參數傳入</h3>
  <button type="button" @click="methodParameter(1, 2, 3, $event)">參數傳入</button>

  <h3>使用 methods 處理複雜資料</h3>
  <ul>
    <li v-for="product in products">
      {{ product.name }} / {{ product.price }}
      <button type="button" @click="addToCart(product)">加入購物車</button>
    </li>
  </ul>
  ...
  <h6>購物車項目</h6>
  <ul>
    <li v-for="item in carts">{{ item.name }}</li>
  </ul>
  總金額 {{ sum }}
  <h3>作為 $filter 使用</h3>

  {{ convertToAmount(sum) }}
</div>

<script>
const App = {
  data() {
    return {
      num: 10,
      products: [
        {
          name: '蛋餅',
          price: 30,
          vegan: false
        },
        {
          name: '飯糰',
          price: 35,
          vegan: false
        },
        {
          name: '小籠包',
          price: 60,
          vegan: false
        },
        {
          name: '蘿蔔糕',
          price: 30,
          vegan: true
        },
      ],
      carts: [],
      sum: 0,
    }
  },
  methods: {
    trigger(name) {
      console.log(name, '此事件被觸發了')
    },
    callOtherMethod() {
      this.trigger('由 callOtherMethod 觸發')
    },
    methodParameter(a, b, c, d) {
      console.log(a, b, c, d)
    },
    addToCart(product) {
      this.carts.push(product)
      this.calculate()
    },
    calculate() {
      // let total = 0;
      // this.carts.forEach(item => {
      //   total += item.price;
      // });
      // this.sum = total;

      // 縮寫
      this.sum = this.carts.reduce((curr, next) => curr + next.price , 0);
    },
    convertToAmount(price) {
      return `NT$ ${price}`
    }
  },
  created() {
    this.trigger('由生命週期觸發')
    console.log(this);
  }
};
Vue.createApp(App).mount('#app');
</script>
