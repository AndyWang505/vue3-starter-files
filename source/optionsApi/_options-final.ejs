---
title: 章節挑戰
layout: ./source/_layout.ejs
current: options-methods
menu: optionsApi
engine: ejs
---

<div id="app" class="mt-2">
  <div class="container">
    <div class="row">
      <div class="col-md-3">
        <div class="form-floating mb-2">
          <input v-model="cacheSearch" type="text" class="form-control" id="search" placeholder="search">
          <label for="search">search</label>
        </div>
        <div class="list-group option">
          <label v-for="(item, keys) in filterSearch" class="list-group-item" :key="keys">
            <input @click="cacheArea = item.Name" class="form-check-input me-1" type="radio" :value="item.Name" name="area" :checked="cacheArea === item.Name">
            {{ item.Name }}
          </label>
          
        </div>
      </div>
      <div class="col-md-8">
        <select v-model="cacheArea" class="form-select w-50 mb-2" aria-label="select example">
          <option selected>瀏覽紀錄</option>
          <option v-for="(item, keys) in browseLog" :value="item">{{ keys + 1 }}.{{ item }}</option>
        </select>
        <div v-for="(item, keys) in filterArea" class="card" :key="keys">
          <img :src="item.Picture1" class="card-img-top" :alt="item.Name">
          <iframe width="100%" height="300" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"
                  :src=`https://maps.google.com.tw/maps?f=q&hl=zh-TW&geocode=&q=${item.Py},${item.Px}(${item.Name})&z=16&output=embed`></iframe>
          <div class="card-body">
            <h5 class="card-title">{{ item.Name }}</h5>
            <p>{{ item.Description }}</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
const App = {
  data() {
    return {
      datastore: [],
      cacheArea: '',
      cacheSearch: '',
      browseLog: [],
    };
  },
  methods: {
    getData() {
      const apiUrl = 'https://raw.githubusercontent.com/hexschool/KCGTravel/master/datastore_search.json';

      axios.get(apiUrl).then((res) => {
        this.datastore = res.data.result.records;
      })
    },
  },
  computed: {
    filterArea() {
      return this.datastore.filter((item) => item.Name === this.cacheArea);
    },
    filterSearch() {
      return this.datastore.filter((item) => item.Name.match(this.cacheSearch));
    },
  },
  watch: {
    cacheArea() {
      if(this.browseLog.length < 10) {
        this.browseLog.push(this.cacheArea); 
      } else {
        this.browseLog.shift();
        this.browseLog.push(this.cacheArea);
      }
    },
  },
  created() {
    this.getData();
  },
};

Vue.createApp(App).mount('#app');
</script>

<style>
.option {
  height: calc(100vh - 58px - 1rem);
  overflow-y: auto;
}
</style>